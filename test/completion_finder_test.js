// Generated by CoffeeScript 1.4.0
(function() {
  "use strict";

  describe('A completion finder', function() {
    var ac;
    ac = void 0;
    beforeEach(function() {
      return ac = new CompletionFinder;
    });
    it('auto-completes the given stub into a matching full length word', function() {
      ac.setCompletions(['hi', 'bye']);
      return expect(ac.getCompletion('h')).toBe('hi');
    });
    it('returns NONE on getCompletion() when no completions match', function() {
      ac.setCompletions(['bourjeu', 'bye']);
      return expect(ac.getCompletion('h')).toBe(CompletionFinder.NONE);
    });
    it('returns NONE on getCompletion() when no completions have been added', function() {
      return expect(ac.getCompletion('hello')).toBe(CompletionFinder.NONE);
    });
    it('returns the same completion when there is only one match', function() {
      ac.setCompletions(['hello', 'bye']);
      expect(ac.getCompletion('hello')).toBe('hello');
      expect(ac.getCompletion()).toBe('hello');
      return expect(ac.getCompletion()).toBe('hello');
    });
    it('cycles through possible matches on each getCompletion()', function() {
      ac.setCompletions(['hi', 'hello', 'bye', 'help']);
      expect(ac.getCompletion('h')).toBe('hi');
      expect(ac.getCompletion()).toBe('hello');
      expect(ac.getCompletion()).toBe('help');
      expect(ac.getCompletion()).toBe('hi');
      expect(ac.getCompletion()).toBe('hello');
      expect(ac.getCompletion()).toBe('help');
      return expect(ac.getCompletion()).toBe('hi');
    });
    it('uses only the first stub passed into getCompletion() until reset() is called', function() {
      ac.setCompletions(['hi', 'bye', 'help', 'bee']);
      expect(ac.getCompletion('h')).toBe('hi');
      expect(ac.getCompletion('bye')).toBe('help');
      expect(ac.getCompletion('b')).toBe('hi');
      ac.reset();
      expect(ac.getCompletion('b')).toBe('bye');
      expect(ac.getCompletion('hi')).toBe('bee');
      return expect(ac.getCompletion('h')).toBe('bye');
    });
    it("can say if it's in the middle of giving completions", function() {
      expect(ac.hasStarted).toBe(false);
      ac.getCompletion('h');
      expect(ac.hasStarted).toBe(true);
      ac.reset();
      return expect(ac.hasStarted).toBe(false);
    });
    it('ignores case if the stub has no caps', function() {
      ac.setCompletions(['Hi', 'heLLo', 'help']);
      expect(ac.getCompletion('h')).toBe('Hi');
      expect(ac.getCompletion()).toBe('heLLo');
      return expect(ac.getCompletion()).toBe('help');
    });
    return it('does not ignore case if the stub contains one or more capital letter', function() {
      ac.setCompletions(['Hi', 'heLLo', 'help']);
      expect(ac.getCompletion('H')).toBe('Hi');
      return expect(ac.getCompletion('H')).toBe('Hi');
    });
  });

}).call(this);
